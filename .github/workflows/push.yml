name: Push Workflow
on:
  push:
    branches: [ main ]
jobs:
  laravel-tests:

    runs-on: ubuntu-latest

    steps:
      - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
        with:
          php-version: '8.2'
      - uses: actions/checkout@v4
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      - name: Install Composer Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Generate key
        run: php artisan key:generate
      - name: Generate storage link
        run: php artisan storage:link
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      - name: Create Database
        run: |
          mkdir -p database
          touch database/database.sqlite
      - name: Install NPM Dependencies
        run: npm install
      - name: Build Project
        run: npm run build
      - name: Execute tests (Unit and Feature tests) via PHPUnit
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: vendor/bin/phpunit --testsuite=Feature
      - name: Run Laravel Pint Test
        run: vendor/bin/pint --test
  deploy:
    needs: laravel-tests

    runs-on: ubuntu-latest

    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}

          script: |
            cd house-seller.ninja
            git pull
            docker compose -f docker-compose.prod.yml down
            docker compose -f docker-compose.prod.yml up --build -d
            docker exec -it app php artisan down
            docker exec -it app composer install --no-dev --optimize-autoloader
            docker exec -it app npm install
            docker exec -it app npm run build
            docker exec -it app php artisan migrate --force
            docker exec -it app php artisan config:cache
            docker exec -it app php artisan event:cache
            docker exec -it app php artisan route:cache
            docker exec -it app php artisan view:cache
            docker exec -it app php artisan up